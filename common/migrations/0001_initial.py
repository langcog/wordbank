# Generated by Django 3.1.7 on 2021-11-25 16:12

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("contenttypes", "0002_remove_content_type_name"),
    ]

    operations = [
        migrations.CreateModel(
            name="Administration",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("is_norming", models.BooleanField(default=False)),
                ("date_of_test", models.DateField(blank=True, null=True)),
                ("age", models.IntegerField()),
                ("study_internal_age", models.IntegerField(blank=True, null=True)),
                ("production", models.IntegerField(null=True)),
                ("comprehension", models.IntegerField(null=True)),
                ("data_id", models.PositiveIntegerField(db_index=True)),
            ],
        ),
        migrations.CreateModel(
            name="CaregiverEducation",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "education_level",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                ("education_order", models.IntegerField(unique=True)),
            ],
            options={
                "db_table": "common_caregiver_education",
                "ordering": ["education_order"],
            },
        ),
        migrations.CreateModel(
            name="DatasetOrigin",
            fields=[
                (
                    "dataset_origin_name",
                    models.CharField(max_length=251, primary_key=True, serialize=False),
                ),
            ],
            options={
                "db_table": "common_dataset_origin",
            },
        ),
        migrations.CreateModel(
            name="HealthCondition",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("health_condition_name", models.CharField(max_length=51, unique=True)),
            ],
            options={
                "db_table": "common_health_condition",
            },
        ),
        migrations.CreateModel(
            name="Instrument",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("language", models.CharField(max_length=30)),
                (
                    "form",
                    models.CharField(
                        choices=[
                            ("WS", "Words & Sentences"),
                            ("WG", "Words & Gestures"),
                            ("TC", "Toddler Checklist"),
                            ("IC", "Infant Checklist"),
                            ("TEDS Twos", "TEDS Twos"),
                            ("TEDS Threes", "TEDS Threes"),
                            ("FormA", "FormA"),
                            ("FormBOne", "FormBOne"),
                            ("FormBTwo", "FormBTwo"),
                            ("FormC", "FormC"),
                        ],
                        max_length=12,
                    ),
                ),
                ("form_type", models.CharField(max_length=12)),
                ("age_min", models.IntegerField()),
                ("age_max", models.IntegerField()),
                ("has_grammar", models.BooleanField(default=False)),
                (
                    "unilemma_coverage",
                    models.DecimalField(decimal_places=2, max_digits=3, null=True),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ItemCategory",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("category", models.CharField(max_length=50)),
                ("lexical_category", models.CharField(max_length=20)),
                ("lexical_class", models.CharField(max_length=20)),
            ],
            options={
                "db_table": "common_item_category",
            },
        ),
        migrations.CreateModel(
            name="UniLemma",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("uni_lemma", models.CharField(max_length=50, unique=True)),
            ],
            options={
                "db_table": "common_uni_lemma",
            },
        ),
        migrations.CreateModel(
            name="LanguageExposure",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("language", models.CharField(max_length=51)),
                (
                    "exposure_proportion",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        validators=[
                            django.core.validators.MaxValueValidator(100),
                            django.core.validators.MinValueValidator(1),
                        ],
                    ),
                ),
                (
                    "age_of_first_exposure",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(72),
                        ],
                    ),
                ),
                (
                    "administration",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="common.administration",
                    ),
                ),
            ],
            options={
                "db_table": "common_language_exposure",
                "ordering": ["administration"],
            },
        ),
        migrations.CreateModel(
            name="Item",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("item_id", models.CharField(db_index=True, max_length=20)),
                ("item_kind", models.CharField(max_length=30)),
                (
                    "item_definition",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                ("study_internal_item", models.CharField(max_length=50)),
                (
                    "english_gloss",
                    models.CharField(blank=True, max_length=80, null=True),
                ),
                (
                    "complexity_category",
                    models.CharField(blank=True, max_length=30, null=True),
                ),
                (
                    "instrument",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="common.instrument",
                    ),
                ),
                (
                    "item_category",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="common.itemcategory",
                    ),
                ),
                (
                    "uni_lemma",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="common.unilemma",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Dataset",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("dataset_name", models.CharField(max_length=20)),
                ("contributor", models.TextField(blank=True)),
                ("citation", models.TextField(blank=True)),
                (
                    "license",
                    models.CharField(
                        choices=[("CC-BY", "CC BY 4.0"), ("CC-BY-NC", "CC BY-NC 4.0")],
                        max_length=15,
                    ),
                ),
                ("longitudinal", models.BooleanField(default=False)),
                (
                    "dataset_origin",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="common.datasetorigin",
                    ),
                ),
                (
                    "instrument",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="common.instrument",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Child",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("birth_order", models.IntegerField(blank=True, null=True)),
                (
                    "ethnicity",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("A", "Asian"),
                            ("B", "Black"),
                            ("H", "Hispanic"),
                            ("W", "White"),
                            ("O", "Other/Mixed"),
                        ],
                        max_length=1,
                        null=True,
                    ),
                ),
                (
                    "sex",
                    models.CharField(
                        blank=True,
                        choices=[("M", "Male"), ("F", "Female"), ("O", "Other")],
                        max_length=1,
                        null=True,
                    ),
                ),
                (
                    "zygosity",
                    models.CharField(
                        blank=True,
                        choices=[("M", "Monozygotic"), ("D", "Dizygotic")],
                        max_length=2,
                        null=True,
                    ),
                ),
                (
                    "born_early_or_late",
                    models.CharField(
                        blank=True,
                        choices=[("early", "early"), ("late", "late")],
                        max_length=5,
                        null=True,
                    ),
                ),
                ("birth_weight", models.FloatField(blank=True, null=True)),
                (
                    "gestational_age",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(25),
                            django.core.validators.MaxValueValidator(50),
                        ],
                    ),
                ),
                ("study_internal_id", models.CharField(max_length=201, null=True)),
                (
                    "study_internal_family_id",
                    models.CharField(max_length=20, null=True),
                ),
                (
                    "study_internal_caregiver_education",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("date_of_birth", models.DateField(blank=True, null=True)),
                (
                    "caregiver_education",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="common.caregivereducation",
                    ),
                ),
                (
                    "dataset_origin",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="common.datasetorigin",
                    ),
                ),
                (
                    "health_conditions",
                    models.ManyToManyField(to="common.HealthCondition"),
                ),
            ],
        ),
        migrations.CreateModel(
            name="CategorySize",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("data_id", models.IntegerField()),
                ("production", models.IntegerField(null=True)),
                ("comprehension", models.IntegerField(null=True)),
                (
                    "item_category",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="common.itemcategory",
                    ),
                ),
            ],
            options={
                "db_table": "common_category_size",
            },
        ),
        migrations.AddField(
            model_name="administration",
            name="child",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="common.child"
            ),
        ),
        migrations.AddField(
            model_name="administration",
            name="data_content_type",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="contenttypes.contenttype",
            ),
        ),
        migrations.AddField(
            model_name="administration",
            name="dataset",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="common.dataset",
            ),
        ),
        migrations.AddField(
            model_name="administration",
            name="instrument",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="common.instrument"
            ),
        ),
    ]
