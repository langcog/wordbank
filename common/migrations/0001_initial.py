# Generated by Django 3.1.7 on 2021-04-19 07:10

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Administration',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('norming', models.BooleanField(default=False)),
                ('date_of_test', models.DateField(blank=True, null=True)),
                ('data_id', models.IntegerField(db_index=True)),
                ('age', models.IntegerField()),
                ('data_age', models.IntegerField(blank=True, null=True)),
                ('production', models.IntegerField(null=True)),
                ('comprehension', models.IntegerField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('lexical_category', models.CharField(max_length=20)),
                ('lexical_class', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Condition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=51, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Instrument',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language', models.CharField(max_length=30)),
                ('form', models.CharField(choices=[('WS', 'Words & Sentences'), ('WG', 'Words & Gestures'), ('TC', 'Toddler Checklist'), ('IC', 'Infant Checklist'), ('TEDS Twos', 'TEDS Twos'), ('TEDS Threes', 'TEDS Threes'), ('FormA', 'FormA'), ('FormBOne', 'FormBOne'), ('FormBTwo', 'FormBTwo'), ('FormC', 'FormC')], max_length=12)),
                ('age_min', models.IntegerField()),
                ('age_max', models.IntegerField()),
                ('has_grammar', models.BooleanField(default=False)),
                ('unilemma_coverage', models.DecimalField(decimal_places=2, max_digits=3, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ItemMap',
            fields=[
                ('uni_lemma', models.CharField(max_length=50, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='MomEd',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level', models.CharField(blank=True, max_length=20, null=True)),
                ('order', models.IntegerField(unique=True)),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='Source',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('dataset', models.CharField(blank=True, max_length=20, null=True)),
                ('instrument_language', models.CharField(max_length=30)),
                ('instrument_form', models.CharField(max_length=20)),
                ('contributor', models.TextField(blank=True)),
                ('citation', models.TextField(blank=True)),
                ('longitudinal', models.BooleanField(default=False)),
                ('license', models.CharField(choices=[('CC-BY', 'CC BY 4.0'), ('CC-BY-NC', 'CC BY-NC 4.0')], max_length=15)),
            ],
        ),
        migrations.CreateModel(
            name='LanguageExposure',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language', models.CharField(max_length=51)),
                ('language_from', models.CharField(blank=True, max_length=50, null=True)),
                ('language_days_per_week', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(7), django.core.validators.MinValueValidator(1)])),
                ('language_hours_per_day', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(24), django.core.validators.MinValueValidator(1)])),
                ('proportion', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(100), django.core.validators.MinValueValidator(1)])),
                ('age_of_acquisition', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('administration', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='common.administration')),
            ],
            options={
                'ordering': ['administration'],
            },
        ),
        migrations.CreateModel(
            name='ItemInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item', models.CharField(max_length=50)),
                ('item_id', models.CharField(db_index=True, max_length=20)),
                ('type', models.CharField(max_length=30)),
                ('definition', models.CharField(blank=True, max_length=200, null=True)),
                ('gloss', models.CharField(blank=True, max_length=80, null=True)),
                ('complexity_category', models.CharField(blank=True, max_length=30, null=True)),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='common.category')),
                ('instrument', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='common.instrument')),
                ('map', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='common.itemmap')),
            ],
        ),
        migrations.CreateModel(
            name='Child',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('study_id', models.CharField(max_length=20, null=True)),
                ('birth_order', models.IntegerField(blank=True, null=True)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('ethnicity', models.CharField(blank=True, choices=[('A', 'Asian'), ('B', 'Black'), ('H', 'Hispanic'), ('W', 'White'), ('O', 'Other/Mixed')], max_length=1, null=True)),
                ('study_momed', models.CharField(blank=True, max_length=100, null=True)),
                ('sex', models.CharField(blank=True, choices=[('M', 'Male'), ('F', 'Female'), ('O', 'Other')], max_length=1, null=True)),
                ('zygosity', models.CharField(blank=True, choices=[('M', 'Monozygotic'), ('D', 'Dizygotic')], max_length=2, null=True)),
                ('study_family_id', models.CharField(max_length=20, null=True)),
                ('born_early_or_late', models.CharField(blank=True, choices=[('early', 'early'), ('late', 'late')], max_length=5, null=True)),
                ('birth_weight', models.FloatField(blank=True, null=True)),
                ('gestational_age', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(25), django.core.validators.MaxValueValidator(50)])),
                ('conditions', models.ManyToManyField(to='common.Condition')),
                ('momed', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='common.momed')),
            ],
        ),
        migrations.CreateModel(
            name='CategorySize',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_id', models.IntegerField()),
                ('production', models.IntegerField(null=True)),
                ('comprehension', models.IntegerField(null=True)),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='common.category')),
            ],
        ),
        migrations.AddField(
            model_name='administration',
            name='child',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='common.child'),
        ),
        migrations.AddField(
            model_name='administration',
            name='instrument',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='common.instrument'),
        ),
        migrations.AddField(
            model_name='administration',
            name='source',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='common.source'),
        ),
    ]
